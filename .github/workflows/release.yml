name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.2)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=stable
          type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}

    - name: Build and push release image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Helm chart with release tag
      run: |
        # Extract version from tag or use manual input
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
        fi
        
        # Update Chart.yaml version
        sed -i "s/^version:.*/version: $VERSION/" helm/airia-test-pod/Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" helm/airia-test-pod/Chart.yaml
        
        echo "Updated Helm chart to version $VERSION"

    - name: Package Helm chart
      run: |
        helm package helm/airia-test-pod --destination ./helm-packages

    - name: Create Git Tag (for manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"

    - name: Upload Helm chart to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version) || github.ref_name }}
        name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version) || github.ref_name }}
        files: ./helm-packages/*.tgz
        generate_release_notes: true

    - name: Setup GitHub Pages for Helm repository
      if: success()
      run: |
        # Create gh-pages branch if it doesn't exist
        git fetch origin gh-pages || git checkout --orphan gh-pages
        git checkout gh-pages || echo "Already on gh-pages"
        
        # Copy chart package to docs directory
        mkdir -p docs
        cp ./helm-packages/*.tgz docs/
        
        # Generate or update index.yaml
        helm repo index docs --url https://davidpacold.github.io/airia-test-pod/
        
        # Commit and push to gh-pages
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/
        git commit -m "Update Helm repository with ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}" || exit 0
        git push origin gh-pages